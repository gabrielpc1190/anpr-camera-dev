# docker-compose.yml
# Versión final para producción: Orquesta todos los servicios del proyecto.

version: '3.8'

services:
  # 1. ANPR Listener: Captures events from cameras
  anpr-listener:
    build:
      context: .
      dockerfile: anpr_listener.Dockerfile
    container_name: anpr-listener
    restart: always
    env_file: .env
    environment:
      - DB_MANAGER_URL=http://anpr-db-manager:5001/event
    volumes:
      - ./app/config.ini:/app/config.ini:ro
      - ./app/logs:/app/logs
    depends_on:
      anpr-db-manager:
        condition: service_healthy
    command: python anpr_listener.py


  # 2. ANPR DB Manager: The single source of truth for data
  anpr-db-manager:
    build:
      context: .
      dockerfile: anpr_db_manager.Dockerfile
    container_name: anpr-db-manager
    restart: always
    env_file: .env
    environment:
      - FLASK_RUN_PORT=5001
      - FLASK_DEBUG=0 # Desactivar debug para producción
    volumes:
      - ./app/config.ini:/app/config.ini:ro
      - ./app/anpr_images:/app/anpr_images
      - ./app/logs:/app/logs
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  # 3. ANPR Web: Frontend proxy and UI server
  anpr-web:
    build:
      context: .
      dockerfile: anpr_web.Dockerfile
    container_name: anpr-web
    restart: always
    env_file: .env
    environment:
      - FLASK_RUN_PORT=5000
      - DB_MANAGER_API_URL=http://anpr-db-manager:5001
    ports:
      - "5000:5000"
    volumes:
      - ./app/config.ini:/app/config.ini:ro
      - ./app/anpr_images:/app/anpr_images:ro
      - ./app/logs:/app/logs
    depends_on:
      anpr-db-manager:
        condition: service_healthy
    command: gunicorn --bind 0.0.0.0:5000 --workers 4 anpr_web:app

  # 4. MariaDB: The database service
  mariadb:
    image: mariadb:10.6
    container_name: anpr-mariadb
    restart: always
    env_file: .env
    volumes:
      - ./app/db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 5. Cloudflared: Exposes the web UI to the internet
  cloudflared-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: anpr-tunnel
    restart: always
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN}
    depends_on:
      - anpr-web
